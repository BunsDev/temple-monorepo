/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FakeUniswapRouter,
  FakeUniswapRouterInterface,
} from "../FakeUniswapRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061057e806100206000396000f3fe60806040526004361061004a5760003560e01c8063414bf3891461004f578063c04b8d591461007f578063db3e2198146100af578063f28c0498146100df578063fa461e331461010f575b600080fd5b610069600480360381019061006491906103e1565b610138565b60405161007691906104c8565b60405180910390f35b610099600480360381019061009491906103a0565b610175565b6040516100a691906104c8565b60405180910390f35b6100c960048036038101906100c4919061044c565b6101b2565b6040516100d691906104c8565b60405180910390f35b6100f960048036038101906100f4919061040b565b6101ef565b60405161010691906104c8565b60405180910390f35b34801561011b57600080fd5b5061013660048036038101906101319190610334565b61022c565b005b60006040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016c906104a8565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a9906104a8565b60405180910390fd5b60006040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e6906104a8565b60405180910390fd5b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610223906104a8565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e906104a8565b60405180910390fd5b60008083601f84011261027957600080fd5b8235905067ffffffffffffffff81111561029257600080fd5b6020830191508360018202830111156102aa57600080fd5b9250929050565b6000813590506102c081610531565b92915050565b600060a082840312156102d857600080fd5b81905092915050565b600061010082840312156102f457600080fd5b81905092915050565b600060a0828403121561030f57600080fd5b81905092915050565b6000610100828403121561032b57600080fd5b81905092915050565b6000806000806060858703121561034a57600080fd5b6000610358878288016102b1565b9450506020610369878288016102b1565b935050604085013567ffffffffffffffff81111561038657600080fd5b61039287828801610267565b925092505092959194509250565b6000602082840312156103b257600080fd5b600082013567ffffffffffffffff8111156103cc57600080fd5b6103d8848285016102c6565b91505092915050565b600061010082840312156103f457600080fd5b6000610402848285016102e1565b91505092915050565b60006020828403121561041d57600080fd5b600082013567ffffffffffffffff81111561043757600080fd5b610443848285016102fd565b91505092915050565b6000610100828403121561045f57600080fd5b600061046d84828501610318565b91505092915050565b6000610483600d836104e3565b915061048e82610508565b602082019050919050565b6104a2816104fe565b82525050565b600060208201905081810360008301526104c181610476565b9050919050565b60006020820190506104dd6000830184610499565b92915050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b7f556e696d706c656d656274656400000000000000000000000000000000000000600082015250565b61053a816104f4565b811461054557600080fd5b5056fea26469706673582212203058316d912387459a4cd7d5e0582a44d448debdbc14736036a6446a7cebff1264736f6c63430008040033";

export class FakeUniswapRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeUniswapRouter> {
    return super.deploy(overrides || {}) as Promise<FakeUniswapRouter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FakeUniswapRouter {
    return super.attach(address) as FakeUniswapRouter;
  }
  connect(signer: Signer): FakeUniswapRouter__factory {
    return super.connect(signer) as FakeUniswapRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeUniswapRouterInterface {
    return new utils.Interface(_abi) as FakeUniswapRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeUniswapRouter {
    return new Contract(address, _abi, signerOrProvider) as FakeUniswapRouter;
  }
}
