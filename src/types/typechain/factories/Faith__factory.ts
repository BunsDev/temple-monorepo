/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faith, FaithInterface } from "../Faith";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Gain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Loose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "gain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "loose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ce98061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a61461011e5780638da5cb5b146101285780639fe5491c14610146578063ac18de4314610162578063f2fde38b1461017e57610093565b806318160ddd1461009857806327e235e3146100b65780632d06177a146100e65780635e7ba48114610102575b600080fd5b6100a061019a565b6040516100ad9190610a9d565b60405180910390f35b6100d060048036038101906100cb919061090d565b6101a0565b6040516100dd9190610a9d565b60405180910390f35b61010060048036038101906100fb919061090d565b6101b8565b005b61011c60048036038101906101179190610936565b61028f565b005b610126610458565b005b6101306104e0565b60405161013d91906109f9565b60405180910390f35b610160600480360381019061015b9190610936565b610509565b005b61017c6004803603810190610177919061090d565b610648565b005b6101986004803603810190610193919061090d565b61071f565b005b60035481565b60016020528060005260406000206000915090505481565b6101c0610817565b73ffffffffffffffffffffffffffffffffffffffff166101de6104e0565b73ffffffffffffffffffffffffffffffffffffffff1614610234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022b90610a7d565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031990610a3d565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156103ac57600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b80600360008282546103be9190610b1f565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104149190610b1f565b925050819055507fe055ae8faf25eafc77d79a58434a4a72a90571abf61e48a8e051d62547f783a5828260405161044c929190610a14565b60405180910390a15050565b610460610817565b73ffffffffffffffffffffffffffffffffffffffff1661047e6104e0565b73ffffffffffffffffffffffffffffffffffffffff16146104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb90610a7d565b60405180910390fd5b6104de600061081f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610a3d565b60405180910390fd5b80600360008282546105ae9190610ac9565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106049190610ac9565b925050819055507fd2ff26b9fa2e246942febada60f642d2d8338bd3c40ca9f3e65d01a24eb57009828260405161063c929190610a14565b60405180910390a15050565b610650610817565b73ffffffffffffffffffffffffffffffffffffffff1661066e6104e0565b73ffffffffffffffffffffffffffffffffffffffff16146106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb90610a7d565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610727610817565b73ffffffffffffffffffffffffffffffffffffffff166107456104e0565b73ffffffffffffffffffffffffffffffffffffffff161461079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290610a7d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290610a5d565b60405180910390fd5b6108148161081f565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506108f281610c85565b92915050565b60008135905061090781610c9c565b92915050565b60006020828403121561091f57600080fd5b600061092d848285016108e3565b91505092915050565b6000806040838503121561094957600080fd5b6000610957858286016108e3565b9250506020610968858286016108f8565b9150509250929050565b61097b81610b53565b82525050565b600061098e602183610ab8565b915061099982610bbe565b604082019050919050565b60006109b1602683610ab8565b91506109bc82610c0d565b604082019050919050565b60006109d4602083610ab8565b91506109df82610c5c565b602082019050919050565b6109f381610b85565b82525050565b6000602082019050610a0e6000830184610972565b92915050565b6000604082019050610a296000830185610972565b610a3660208301846109ea565b9392505050565b60006020820190508181036000830152610a5681610981565b9050919050565b60006020820190508181036000830152610a76816109a4565b9050919050565b60006020820190508181036000830152610a96816109c7565b9050919050565b6000602082019050610ab260008301846109ea565b92915050565b600082825260208201905092915050565b6000610ad482610b85565b9150610adf83610b85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1457610b13610b8f565b5b828201905092915050565b6000610b2a82610b85565b9150610b3583610b85565b925082821015610b4857610b47610b8f565b5b828203905092915050565b6000610b5e82610b65565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f46616974683a2063616c6c65722063616e6e6f74206d616e616765206661697460008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610c8e81610b53565b8114610c9957600080fd5b50565b610ca581610b85565b8114610cb057600080fd5b5056fea26469706673582212204b383f7ff5b02d1cfe2ee691e2402fb6aa5af64824bbbd205856294603fa705264736f6c63430008040033";

export class Faith__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faith> {
    return super.deploy(overrides || {}) as Promise<Faith>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faith {
    return super.attach(address) as Faith;
  }
  connect(signer: Signer): Faith__factory {
    return super.connect(signer) as Faith__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaithInterface {
    return new utils.Interface(_abi) as FaithInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faith {
    return new Contract(address, _abi, signerOrProvider) as Faith;
  }
}
