/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OpeningCeremonyQuest,
  OpeningCeremonyQuestInterface,
} from "../OpeningCeremonyQuest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dataOf",
    outputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "templar",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ab88061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806388f89157146100665780638da5cb5b14610082578063bb3d4562146100a0578063f2fde38b146100d1575b600080fd5b6100646100ed565b005b610080600480360381019061007b919061068b565b610175565b005b61008a610294565b604051610097919061078f565b60405180910390f35b6100ba60048036038101906100b59190610662565b6102bd565b6040516100c89291906107ea565b60405180910390f35b6100eb60048036038101906100e69190610662565b610369565b005b6100f5610461565b73ffffffffffffffffffffffffffffffffffffffff16610113610294565b73ffffffffffffffffffffffffffffffffffffffff1614610169576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610160906107ca565b60405180910390fd5b6101736000610469565b565b61017d610461565b73ffffffffffffffffffffffffffffffffffffffff1661019b610294565b73ffffffffffffffffffffffffffffffffffffffff16146101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e8906107ca565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061028e92919061052d565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010180546102e69061090a565b80601f01602080910402602001604051908101604052809291908181526020018280546103129061090a565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905082565b610371610461565b73ffffffffffffffffffffffffffffffffffffffff1661038f610294565b73ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc906107ca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610455576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044c906107aa565b60405180910390fd5b61045e81610469565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546105399061090a565b90600052602060002090601f01602090048101928261055b57600085556105a2565b82601f1061057457805160ff19168380011785556105a2565b828001600101855582156105a2579182015b828111156105a1578251825591602001919060010190610586565b5b5090506105af91906105b3565b5090565b5b808211156105cc5760008160009055506001016105b4565b5090565b60006105e36105de8461083f565b61081a565b9050828152602081018484840111156105fb57600080fd5b6106068482856108c8565b509392505050565b60008135905061061d81610a54565b92915050565b600082601f83011261063457600080fd5b81356106448482602086016105d0565b91505092915050565b60008135905061065c81610a6b565b92915050565b60006020828403121561067457600080fd5b60006106828482850161060e565b91505092915050565b6000806000606084860312156106a057600080fd5b60006106ae8682870161060e565b93505060206106bf8682870161064d565b925050604084013567ffffffffffffffff8111156106dc57600080fd5b6106e886828701610623565b9150509250925092565b6106fb8161088c565b82525050565b600061070c82610870565b610716818561087b565b93506107268185602086016108d7565b61072f816109cb565b840191505092915050565b600061074760268361087b565b9150610752826109dc565b604082019050919050565b600061076a60208361087b565b915061077582610a2b565b602082019050919050565b610789816108be565b82525050565b60006020820190506107a460008301846106f2565b92915050565b600060208201905081810360008301526107c38161073a565b9050919050565b600060208201905081810360008301526107e38161075d565b9050919050565b60006040820190506107ff6000830185610780565b81810360208301526108118184610701565b90509392505050565b6000610824610835565b9050610830828261093c565b919050565b6000604051905090565b600067ffffffffffffffff82111561085a5761085961099c565b5b610863826109cb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006108978261089e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156108f55780820151818401526020810190506108da565b83811115610904576000848401525b50505050565b6000600282049050600182168061092257607f821691505b602082108114156109365761093561096d565b5b50919050565b610945826109cb565b810181811067ffffffffffffffff821117156109645761096361099c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610a5d8161088c565b8114610a6857600080fd5b50565b610a74816108be565b8114610a7f57600080fd5b5056fea264697066735822122012130570f391d4234592c09212a8e47f90d8540261a0f4cf2cacc0a519e20ecd64736f6c63430008040033";

export class OpeningCeremonyQuest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpeningCeremonyQuest> {
    return super.deploy(overrides || {}) as Promise<OpeningCeremonyQuest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OpeningCeremonyQuest {
    return super.attach(address) as OpeningCeremonyQuest;
  }
  connect(signer: Signer): OpeningCeremonyQuest__factory {
    return super.connect(signer) as OpeningCeremonyQuest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpeningCeremonyQuestInterface {
    return new utils.Interface(_abi) as OpeningCeremonyQuestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpeningCeremonyQuest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OpeningCeremonyQuest;
  }
}
