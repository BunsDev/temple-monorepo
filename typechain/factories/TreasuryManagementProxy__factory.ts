/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryManagementProxy,
  TreasuryManagementProxyInterface,
} from "../TreasuryManagementProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountStablec",
        type: "uint256",
      },
    ],
    name: "allocateTreasuryStablec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
    ],
    name: "ejectTreasuryAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestPercentageAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTemple",
        type: "uint256",
      },
    ],
    name: "mintAndAllocateTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "removePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetIV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_harvestPercentageAmount",
        type: "uint256",
      },
    ],
    name: "setHarvestAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract TempleTreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "unallocateAndBurnUnusedMintedTemple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
    ],
    name: "updateMarkToMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_poolHarvestShare",
        type: "uint96",
      },
    ],
    name: "upsertPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITreasuryAllocation",
        name: "_contract",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600060146101000a81548160ff02191690831515021790555060506002553480156200003157600080fd5b50604051620017c3380380620017c38339818101604052810190620000579190620000f7565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000186565b600081519050620000f1816200016c565b92915050565b600080604083850312156200010b57600080fd5b60006200011b85828601620000e0565b92505060206200012e85828601620000e0565b9150509250929050565b600062000145826200014c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001778162000138565b81146200018357600080fd5b50565b61162d80620001966000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806379b3066b116100a2578063bf3abb2411610071578063bf3abb241461022e578063c1c330c614610238578063d7d93b5a14610254578063e69948bc14610272578063f2fde38b1461028e5761010b565b806379b3066b146101d05780639b429108146101da578063a072dc32146101f6578063b1bead99146102125761010b565b806351cff8d9116100de57806351cff8d91461015e5780635b7244d41461017a57806361d027b3146101965780637877eed2146101b45761010b565b80631af9b7651461011057806324c2ddec1461012e5780634641257d146101385780634ff92a4d14610142575b600080fd5b6101186102aa565b6040516101259190611463565b60405180910390f35b6101366102b0565b005b6101406103c2565b005b61015c60048036038101906101579190611174565b610467565b005b61017860048036038101906101739190611215565b610585565b005b610194600480360381019061018f9190611215565b6106a3565b005b61019e6107c1565b6040516101ab9190611428565b60405180910390f35b6101ce60048036038101906101c9919061119d565b6107e5565b005b6101d8610906565b005b6101f460048036038101906101ef91906112a3565b610a18565b005b610210600480360381019061020b919061123e565b610b39565b005b61022c600480360381019061022791906111d9565b610c5a565b005b610236610d7b565b005b610252600480360381019061024d919061127a565b610e37565b005b61025c610ed1565b60405161026991906113c9565b60405180910390f35b61028c60048036038101906102879190611215565b610ee4565b005b6102a860048036038101906102a39190611174565b611002565b005b60025481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033790611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324c2ddec6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b50505050565b600060149054906101000a900460ff16156104655760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddc632626002546040518263ffffffff1660e01b81526004016104329190611463565b600060405180830381600087803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b505050505b565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634ff92a4d826040518263ffffffff1660e01b8152600401610550919061135c565b600060405180830381600087803b15801561056a57600080fd5b505af115801561057e573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b815260040161066e91906113e4565b600060405180830381600087803b15801561068857600080fd5b505af115801561069c573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b7244d4826040518263ffffffff1660e01b815260040161078c91906113e4565b600060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637877eed283836040518363ffffffff1660e01b81526004016108d0929190611377565b600060405180830381600087803b1580156108ea57600080fd5b505af11580156108fe573d6000803e3d6000fd5b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379b3066b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b42910883836040518363ffffffff1660e01b8152600401610b0392919061147e565b600060405180830381600087803b158015610b1d57600080fd5b505af1158015610b31573d6000803e3d6000fd5b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc090611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a072dc3283836040518363ffffffff1660e01b8152600401610c249291906113ff565b600060405180830381600087803b158015610c3e57600080fd5b505af1158015610c52573d6000803e3d6000fd5b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce190611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b1bead9983836040518363ffffffff1660e01b8152600401610d459291906113a0565b600060405180830381600087803b158015610d5f57600080fd5b505af1158015610d73573d6000803e3d6000fd5b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0290611443565b60405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90611443565b60405180910390fd5b8060028190555050565b600060149054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6b90611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e69948bc826040518263ffffffff1660e01b8152600401610fcd91906113e4565b600060405180830381600087803b158015610fe757600080fd5b505af1158015610ffb573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108990611443565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b826040518263ffffffff1660e01b81526004016110eb919061135c565b600060405180830381600087803b15801561110557600080fd5b505af1158015611119573d6000803e3d6000fd5b5050505050565b60008135905061112f8161159b565b92915050565b600081359050611144816115b2565b92915050565b600081359050611159816115c9565b92915050565b60008135905061116e816115e0565b92915050565b60006020828403121561118657600080fd5b600061119484828501611120565b91505092915050565b600080604083850312156111b057600080fd5b60006111be85828601611120565b92505060206111cf8582860161114a565b9150509250929050565b600080604083850312156111ec57600080fd5b60006111fa85828601611120565b925050602061120b8582860161115f565b9150509250929050565b60006020828403121561122757600080fd5b600061123584828501611135565b91505092915050565b6000806040838503121561125157600080fd5b600061125f85828601611135565b92505060206112708582860161114a565b9150509250929050565b60006020828403121561128c57600080fd5b600061129a8482850161114a565b91505092915050565b600080604083850312156112b657600080fd5b60006112c48582860161114a565b92505060206112d585828601611120565b9150509250929050565b6112e8816114b8565b82525050565b6112f7816114ca565b82525050565b6113068161152a565b82525050565b6113158161154e565b82525050565b60006113286017836114a7565b915061133382611572565b602082019050919050565b61134781611508565b82525050565b61135681611512565b82525050565b600060208201905061137160008301846112df565b92915050565b600060408201905061138c60008301856112df565b611399602083018461133e565b9392505050565b60006040820190506113b560008301856112df565b6113c2602083018461134d565b9392505050565b60006020820190506113de60008301846112ee565b92915050565b60006020820190506113f960008301846112fd565b92915050565b600060408201905061141460008301856112fd565b611421602083018461133e565b9392505050565b600060208201905061143d600083018461130c565b92915050565b6000602082019050818103600083015261145c8161131b565b9050919050565b6000602082019050611478600083018461133e565b92915050565b6000604082019050611493600083018561133e565b6114a060208301846112df565b9392505050565b600082825260208201905092915050565b60006114c3826114e8565b9050919050565b60008115159050919050565b60006114e1826114b8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006bffffffffffffffffffffffff82169050919050565b60006115358261153c565b9050919050565b6000611547826114e8565b9050919050565b600061155982611560565b9050919050565b600061156b826114e8565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b6115a4816114b8565b81146115af57600080fd5b50565b6115bb816114d6565b81146115c657600080fd5b50565b6115d281611508565b81146115dd57600080fd5b50565b6115e981611512565b81146115f457600080fd5b5056fea26469706673582212204b1760ee32295f5728c48a9ca090823ab4ff17ab156491572df7ab5c8448452e64736f6c63430008040033";

export class TreasuryManagementProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    _treasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryManagementProxy> {
    return super.deploy(
      _owner,
      _treasury,
      overrides || {}
    ) as Promise<TreasuryManagementProxy>;
  }
  getDeployTransaction(
    _owner: string,
    _treasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _treasury, overrides || {});
  }
  attach(address: string): TreasuryManagementProxy {
    return super.attach(address) as TreasuryManagementProxy;
  }
  connect(signer: Signer): TreasuryManagementProxy__factory {
    return super.connect(signer) as TreasuryManagementProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryManagementProxyInterface {
    return new utils.Interface(_abi) as TreasuryManagementProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryManagementProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasuryManagementProxy;
  }
}
