/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Faith, FaithInterface } from "../Faith";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a9f8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101135780638da5cb5b1461011d578063983b2d561461013b578063f2fde38b1461015757610088565b806318160ddd1461008d57806327e235e3146100ab5780633092afd5146100db57806340c10f19146100f7575b600080fd5b610095610173565b6040516100a291906108ad565b60405180910390f35b6100c560048036038101906100c0919061071d565b610179565b6040516100d291906108ad565b60405180910390f35b6100f560048036038101906100f0919061071d565b610191565b005b610111600480360381019061010c9190610746565b610268565b005b61011b6103a7565b005b61012561042f565b6040516101329190610809565b60405180910390f35b6101556004803603810190610150919061071d565b610458565b005b610171600480360381019061016c919061071d565b61052f565b005b60035481565b60016020528060005260406000206000915090505481565b610199610627565b73ffffffffffffffffffffffffffffffffffffffff166101b761042f565b73ffffffffffffffffffffffffffffffffffffffff161461020d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102049061088d565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f29061086d565b60405180910390fd5b806003600082825461030d91906108d9565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036391906108d9565b925050819055507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885828260405161039b929190610824565b60405180910390a15050565b6103af610627565b73ffffffffffffffffffffffffffffffffffffffff166103cd61042f565b73ffffffffffffffffffffffffffffffffffffffff1614610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a9061088d565b60405180910390fd5b61042d600061062f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610460610627565b73ffffffffffffffffffffffffffffffffffffffff1661047e61042f565b73ffffffffffffffffffffffffffffffffffffffff16146104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb9061088d565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610537610627565b73ffffffffffffffffffffffffffffffffffffffff1661055561042f565b73ffffffffffffffffffffffffffffffffffffffff16146105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a29061088d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561061b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106129061084d565b60405180910390fd5b6106248161062f565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061070281610a3b565b92915050565b60008135905061071781610a52565b92915050565b60006020828403121561072f57600080fd5b600061073d848285016106f3565b91505092915050565b6000806040838503121561075957600080fd5b6000610767858286016106f3565b925050602061077885828601610708565b9150509250929050565b61078b8161092f565b82525050565b600061079e6026836108c8565b91506107a98261099a565b604082019050919050565b60006107c16018836108c8565b91506107cc826109e9565b602082019050919050565b60006107e46020836108c8565b91506107ef82610a12565b602082019050919050565b61080381610961565b82525050565b600060208201905061081e6000830184610782565b92915050565b60006040820190506108396000830185610782565b61084660208301846107fa565b9392505050565b6000602082019050818103600083015261086681610791565b9050919050565b60006020820190508181036000830152610886816107b4565b9050919050565b600060208201905081810360008301526108a6816107d7565b9050919050565b60006020820190506108c260008301846107fa565b92915050565b600082825260208201905092915050565b60006108e482610961565b91506108ef83610961565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109245761092361096b565b5b828201905092915050565b600061093a82610941565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f46616974683a2063616c6c65722063616e2774206d696e740000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610a448161092f565b8114610a4f57600080fd5b50565b610a5b81610961565b8114610a6657600080fd5b5056fea2646970667358221220fcdb2ccde6a5d518e0c5e2d4b70cb95a811d7c4eb7cfcf7fb56c254f035ea11864736f6c63430008040033";

export class Faith__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Faith> {
    return super.deploy(overrides || {}) as Promise<Faith>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faith {
    return super.attach(address) as Faith;
  }
  connect(signer: Signer): Faith__factory {
    return super.connect(signer) as Faith__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaithInterface {
    return new utils.Interface(_abi) as FaithInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faith {
    return new Contract(address, _abi, signerOrProvider) as Faith;
  }
}
