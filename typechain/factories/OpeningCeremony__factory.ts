/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OpeningCeremony,
  OpeningCeremonyInterface,
} from "../OpeningCeremony";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stablecToken",
        type: "address",
      },
      {
        internalType: "contract TempleERC20Token",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "contract SandalwoodToken",
        name: "_sandalwoodToken",
        type: "address",
      },
      {
        internalType: "contract TempleStaking",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "contract LockedOGTemple",
        name: "_lockedOGTemple",
        type: "address",
      },
      {
        internalType: "contract TempleTreasury",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract TreasuryManagementProxy",
        name: "_treasuryManagement",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mintMultiple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockDelaySeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_harvestThreshold",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "numerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "denominator",
            type: "uint256",
          },
        ],
        internalType: "struct OpeningCeremony.Factor",
        name: "_bonusFactor",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sandalwoodBurned",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "acceptedStablec",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintedTemple",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bonusTemple",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintedOGTemple",
        type: "uint256",
      },
    ],
    name: "MintComplete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sandalwoodBurned",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "acceptedTemple",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bonusTemple",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintedOGTemple",
        type: "uint256",
      },
    ],
    name: "StakeComplete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "bonusFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedOGTemple",
    outputs: [
      {
        internalType: "contract LockedOGTemple",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountSandalwood",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPaidStablec",
        type: "uint256",
      },
    ],
    name: "mintAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountSandalwood",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountPaidStablec",
        type: "uint256",
      },
    ],
    name: "mintAndStakeFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintMultiple",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sandalwoodBurned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sandalwoodToken",
    outputs: [
      {
        internalType: "contract SandalwoodToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
    ],
    name: "setBonusFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_harvestThreshold",
        type: "uint256",
      },
    ],
    name: "setHarvestThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintMultiple",
        type: "uint256",
      },
    ],
    name: "setMintMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unlockDelaySeconds",
        type: "uint256",
      },
    ],
    name: "setUnlockDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountSandalwood",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountTemple",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountSandalwood",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountTemple",
        type: "uint256",
      },
    ],
    name: "stakeFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract TempleStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract TempleTreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryManagement",
    outputs: [
      {
        internalType: "contract TreasuryManagementProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockDelaySeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class OpeningCeremony__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _stablecToken: string,
    _templeToken: string,
    _sandalwoodToken: string,
    _staking: string,
    _lockedOGTemple: string,
    _treasury: string,
    _treasuryManagement: string,
    _mintMultiple: BigNumberish,
    _unlockDelaySeconds: BigNumberish,
    _harvestThreshold: BigNumberish,
    _bonusFactor: { numerator: BigNumberish; denominator: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpeningCeremony> {
    return super.deploy(
      _stablecToken,
      _templeToken,
      _sandalwoodToken,
      _staking,
      _lockedOGTemple,
      _treasury,
      _treasuryManagement,
      _mintMultiple,
      _unlockDelaySeconds,
      _harvestThreshold,
      _bonusFactor,
      overrides || {}
    ) as Promise<OpeningCeremony>;
  }
  getDeployTransaction(
    _stablecToken: string,
    _templeToken: string,
    _sandalwoodToken: string,
    _staking: string,
    _lockedOGTemple: string,
    _treasury: string,
    _treasuryManagement: string,
    _mintMultiple: BigNumberish,
    _unlockDelaySeconds: BigNumberish,
    _harvestThreshold: BigNumberish,
    _bonusFactor: { numerator: BigNumberish; denominator: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stablecToken,
      _templeToken,
      _sandalwoodToken,
      _staking,
      _lockedOGTemple,
      _treasury,
      _treasuryManagement,
      _mintMultiple,
      _unlockDelaySeconds,
      _harvestThreshold,
      _bonusFactor,
      overrides || {}
    );
  }
  attach(address: string): OpeningCeremony {
    return super.attach(address) as OpeningCeremony;
  }
  connect(signer: Signer): OpeningCeremony__factory {
    return super.connect(signer) as OpeningCeremony__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpeningCeremonyInterface {
    return new utils.Interface(_abi) as OpeningCeremonyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpeningCeremony {
    return new Contract(address, _abi, signerOrProvider) as OpeningCeremony;
  }
}
