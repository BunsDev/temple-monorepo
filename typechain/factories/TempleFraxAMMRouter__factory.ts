/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TempleFraxAMMRouter,
  TempleFraxAMMRouterInterface,
} from "../TempleFraxAMMRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "contract TempleERC20Token",
        name: "_templeToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_fraxToken",
        type: "address",
      },
      {
        internalType: "contract ITempleTreasury",
        name: "_templeTreasury",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "frax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temple",
            type: "uint256",
          },
        ],
        internalType: "struct TempleFraxAMMRouter.Price",
        name: "_dynamicThresholdPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "frax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temple",
            type: "uint256",
          },
        ],
        internalType: "struct TempleFraxAMMRouter.Price",
        name: "_interpolateFromPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "frax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "temple",
            type: "uint256",
          },
        ],
        internalType: "struct TempleFraxAMMRouter.Price",
        name: "_interpolateToPrice",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decayStartBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dynamicThresholdDecayPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dynamicThresholdIncreasePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dynamicThresholdPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "frax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "temple",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fraxToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "interpolateFromPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "frax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "temple",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interpolateToPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "frax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "temple",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "temple",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frax",
        type: "uint256",
      },
    ],
    name: "mintRatioAt",
    outputs: [
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactFraxForTemple",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTempleForFrax",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "templeToken",
    outputs: [
      {
        internalType: "contract TempleERC20Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "templeTreasury",
    outputs: [
      {
        internalType: "contract ITempleTreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class TempleFraxAMMRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _pair: string,
    _templeToken: string,
    _fraxToken: string,
    _templeTreasury: string,
    _dynamicThresholdPrice: { frax: BigNumberish; temple: BigNumberish },
    _interpolateFromPrice: { frax: BigNumberish; temple: BigNumberish },
    _interpolateToPrice: { frax: BigNumberish; temple: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TempleFraxAMMRouter> {
    return super.deploy(
      _pair,
      _templeToken,
      _fraxToken,
      _templeTreasury,
      _dynamicThresholdPrice,
      _interpolateFromPrice,
      _interpolateToPrice,
      overrides || {}
    ) as Promise<TempleFraxAMMRouter>;
  }
  getDeployTransaction(
    _pair: string,
    _templeToken: string,
    _fraxToken: string,
    _templeTreasury: string,
    _dynamicThresholdPrice: { frax: BigNumberish; temple: BigNumberish },
    _interpolateFromPrice: { frax: BigNumberish; temple: BigNumberish },
    _interpolateToPrice: { frax: BigNumberish; temple: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pair,
      _templeToken,
      _fraxToken,
      _templeTreasury,
      _dynamicThresholdPrice,
      _interpolateFromPrice,
      _interpolateToPrice,
      overrides || {}
    );
  }
  attach(address: string): TempleFraxAMMRouter {
    return super.attach(address) as TempleFraxAMMRouter;
  }
  connect(signer: Signer): TempleFraxAMMRouter__factory {
    return super.connect(signer) as TempleFraxAMMRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TempleFraxAMMRouterInterface {
    return new utils.Interface(_abi) as TempleFraxAMMRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TempleFraxAMMRouter {
    return new Contract(address, _abi, signerOrProvider) as TempleFraxAMMRouter;
  }
}
