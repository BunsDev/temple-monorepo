/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AutoHarvestKeeper,
  AutoHarvestKeeperInterface,
} from "../AutoHarvestKeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TempleTreasury",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "contract TreasuryManagementProxy",
        name: "_treasuryManagementProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_stablec",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009e9380380620009e9833981810160405281019062000037919062000147565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200025b565b60008151905062000113816200020d565b92915050565b6000815190506200012a8162000227565b92915050565b600081519050620001418162000241565b92915050565b6000806000606084860312156200015d57600080fd5b60006200016d8682870162000119565b9350506020620001808682870162000130565b9250506040620001938682870162000102565b9150509250925092565b6000620001aa82620001ed565b9050919050565b6000620001be826200019d565b9050919050565b6000620001d2826200019d565b9050919050565b6000620001e6826200019d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200021881620001b1565b81146200022457600080fd5b50565b6200023281620001c5565b81146200023e57600080fd5b50565b6200024c81620001d9565b81146200025857600080fd5b50565b61077e806200026b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634585e33b1461003b5780636e04ff0d14610057575b600080fd5b6100556004803603810190610050919061043d565b610088565b005b610071600480360381019061006c919061043d565b61010e565b60405161007f929190610559565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634641257d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b505050505050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a340bae26040518163ffffffff1660e01b8152600401604080518083038186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b291906104ab565b5090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7d93b5a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561021f57600080fd5b505afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102579190610414565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102d6919061053e565b60206040518083038186803b1580156102ee57600080fd5b505afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103269190610482565b905081801561034d5750606460668461033f91906105d6565b61034991906105a5565b8110155b945086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505093505050509250929050565b6000815190506103af8161071a565b92915050565b60008083601f8401126103c757600080fd5b8235905067ffffffffffffffff8111156103e057600080fd5b6020830191508360018202830111156103f857600080fd5b9250929050565b60008151905061040e81610731565b92915050565b60006020828403121561042657600080fd5b6000610434848285016103a0565b91505092915050565b6000806020838503121561045057600080fd5b600083013567ffffffffffffffff81111561046a57600080fd5b610476858286016103b5565b92509250509250929050565b60006020828403121561049457600080fd5b60006104a2848285016103ff565b91505092915050565b600080604083850312156104be57600080fd5b60006104cc858286016103ff565b92505060206104dd858286016103ff565b9150509250929050565b6104f081610630565b82525050565b6104ff81610642565b82525050565b600061051082610589565b61051a8185610594565b935061052a818560208601610678565b61053381610709565b840191505092915050565b600060208201905061055360008301846104e7565b92915050565b600060408201905061056e60008301856104f6565b81810360208301526105808184610505565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006105b08261066e565b91506105bb8361066e565b9250826105cb576105ca6106da565b5b828204905092915050565b60006105e18261066e565b91506105ec8361066e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610625576106246106ab565b5b828202905092915050565b600061063b8261064e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561069657808201518184015260208101905061067b565b838111156106a5576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61072381610642565b811461072e57600080fd5b50565b61073a8161066e565b811461074557600080fd5b5056fea26469706673582212208b2abaf91b7bc6d177d8e59b75dab28d65b374347c77c4b31aafef143b5f19e264736f6c63430008040033";

export class AutoHarvestKeeper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _treasury: string,
    _treasuryManagementProxy: string,
    _stablec: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoHarvestKeeper> {
    return super.deploy(
      _treasury,
      _treasuryManagementProxy,
      _stablec,
      overrides || {}
    ) as Promise<AutoHarvestKeeper>;
  }
  getDeployTransaction(
    _treasury: string,
    _treasuryManagementProxy: string,
    _stablec: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _treasuryManagementProxy,
      _stablec,
      overrides || {}
    );
  }
  attach(address: string): AutoHarvestKeeper {
    return super.attach(address) as AutoHarvestKeeper;
  }
  connect(signer: Signer): AutoHarvestKeeper__factory {
    return super.connect(signer) as AutoHarvestKeeper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoHarvestKeeperInterface {
    return new utils.Interface(_abi) as AutoHarvestKeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoHarvestKeeper {
    return new Contract(address, _abi, signerOrProvider) as AutoHarvestKeeper;
  }
}
