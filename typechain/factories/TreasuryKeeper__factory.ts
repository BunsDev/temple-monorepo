/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryKeeper,
  TreasuryKeeperInterface,
} from "../TreasuryKeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stablec",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkData",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161095738038061095783398181016040528101906100329190610133565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101cb565b60008151905061012d816101b4565b92915050565b60008060006060848603121561014857600080fd5b60006101568682870161011e565b93505060206101678682870161011e565b92505060406101788682870161011e565b9150509250925092565b600061018d82610194565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101bd81610182565b81146101c857600080fd5b50565b61077d806101da6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634585e33b1461003b5780636e04ff0d14610057575b600080fd5b6100556004803603810190610050919061043c565b610088565b005b610071600480360381019061006c919061043c565b61010e565b60405161007f929190610558565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634641257d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100f257600080fd5b505af1158015610106573d6000803e3d6000fd5b505050505050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a340bae26040518163ffffffff1660e01b8152600401604080518083038186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b291906104aa565b5090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7d93b5a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561021f57600080fd5b505afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102579190610413565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102d6919061053d565b60206040518083038186803b1580156102ee57600080fd5b505afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103269190610481565b905081801561034c575080606460668561034091906105d5565b61034a91906105a4565b115b945086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505093505050509250929050565b6000815190506103ae81610719565b92915050565b60008083601f8401126103c657600080fd5b8235905067ffffffffffffffff8111156103df57600080fd5b6020830191508360018202830111156103f757600080fd5b9250929050565b60008151905061040d81610730565b92915050565b60006020828403121561042557600080fd5b60006104338482850161039f565b91505092915050565b6000806020838503121561044f57600080fd5b600083013567ffffffffffffffff81111561046957600080fd5b610475858286016103b4565b92509250509250929050565b60006020828403121561049357600080fd5b60006104a1848285016103fe565b91505092915050565b600080604083850312156104bd57600080fd5b60006104cb858286016103fe565b92505060206104dc858286016103fe565b9150509250929050565b6104ef8161062f565b82525050565b6104fe81610641565b82525050565b600061050f82610588565b6105198185610593565b9350610529818560208601610677565b61053281610708565b840191505092915050565b600060208201905061055260008301846104e6565b92915050565b600060408201905061056d60008301856104f5565b818103602083015261057f8184610504565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006105af8261066d565b91506105ba8361066d565b9250826105ca576105c96106d9565b5b828204905092915050565b60006105e08261066d565b91506105eb8361066d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610624576106236106aa565b5b828202905092915050565b600061063a8261064d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561069557808201518184015260208101905061067a565b838111156106a4576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b61072281610641565b811461072d57600080fd5b50565b6107398161066d565b811461074457600080fd5b5056fea264697066735822122012114a2665f289598cf3725923ae9a14093d1efa2a578e3cbefb5a114e888c7864736f6c63430008040033";

export class TreasuryKeeper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _treasury: string,
    _treasuryProxy: string,
    _stablec: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryKeeper> {
    return super.deploy(
      _treasury,
      _treasuryProxy,
      _stablec,
      overrides || {}
    ) as Promise<TreasuryKeeper>;
  }
  getDeployTransaction(
    _treasury: string,
    _treasuryProxy: string,
    _stablec: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _treasuryProxy,
      _stablec,
      overrides || {}
    );
  }
  attach(address: string): TreasuryKeeper {
    return super.attach(address) as TreasuryKeeper;
  }
  connect(signer: Signer): TreasuryKeeper__factory {
    return super.connect(signer) as TreasuryKeeper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryKeeperInterface {
    return new utils.Interface(_abi) as TreasuryKeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryKeeper {
    return new Contract(address, _abi, signerOrProvider) as TreasuryKeeper;
  }
}
