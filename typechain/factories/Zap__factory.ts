/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Zap, ZapInterface } from "../Zap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OpeningCeremony",
        name: "_openingCeremonyContract",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_stablecToken",
        type: "address",
      },
      {
        internalType: "contract IUniswapRouter",
        name: "_uniswapRouter",
        type: "address",
      },
      {
        internalType: "contract IQuoter",
        name: "_quoter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "exchangeTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountExchangeToken",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountStablec",
        type: "uint256",
      },
    ],
    name: "ZapComplete",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountTokenInMaximum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fraxAmountOut",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "mintAndStakeZapsOC",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "openingCeremonyContract",
    outputs: [
      {
        internalType: "contract OpeningCeremony",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoter",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e4d38038062001e4d83398181016040528101906200003791906200028d565b620000576200004b6200016560201b60201c565b6200016d60201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620003e5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905062000242816200037d565b92915050565b600081519050620002598162000397565b92915050565b6000815190506200027081620003b1565b92915050565b6000815190506200028781620003cb565b92915050565b60008060008060808587031215620002a457600080fd5b6000620002b48782880162000276565b9450506020620002c78782880162000231565b9350506040620002da878288016200025f565b9250506060620002ed8782880162000248565b91505092959194509250565b600062000306826200035d565b9050919050565b60006200031a82620002f9565b9050919050565b60006200032e82620002f9565b9050919050565b60006200034282620002f9565b9050919050565b60006200035682620002f9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b62000388816200030d565b81146200039457600080fd5b50565b620003a28162000321565b8114620003ae57600080fd5b50565b620003bc8162000335565b8114620003c857600080fd5b50565b620003d68162000349565b8114620003e257600080fd5b50565b611a5880620003f56000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610114578063c6bbd5a71461013f578063e8d93d4e1461016a578063f2fde38b1461019557610086565b8063140ad5971461008b5780631ffb7fb0146100b6578063715018a6146100d2578063735de9f7146100e957610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101be565b6040516100ad91906113b6565b60405180910390f35b6100d060048036038101906100cb9190610f7d565b6101e4565b005b3480156100de57600080fd5b506100e76106c2565b005b3480156100f557600080fd5b506100fe61074a565b60405161010b91906113ec565b60405180910390f35b34801561012057600080fd5b50610129610770565b60405161013691906112cd565b60405180910390f35b34801561014b57600080fd5b50610154610799565b60405161016191906113d1565b60405180910390f35b34801561017657600080fd5b5061017f6107bf565b60405161018c9190611407565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610f02565b6107e5565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156102215750600034145b806102645750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480156102635750600034115b5b6102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90611484565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610319578490506102e7843330846108dd565b61031484600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610966565b61031d565b3490505b60006040518060a001604052808481526020013073ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018381525090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f28c049834846040518363ffffffff1660e01b81526004016103bc9190611524565b6020604051808303818588803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061040e9190610f54565b905061045f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687610966565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e7e49c733876040518363ffffffff1660e01b81526004016104bc92919061138d565b600060405180830381600087803b1580156104d657600080fd5b505af11580156104ea573d6000803e3d6000fd5b505050508281101561067c57600081846105049190611635565b9050600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461054a57610545873383610a87565b61067a565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105b457600080fd5b505af11580156105c8573d6000803e3d6000fd5b5050505060003373ffffffffffffffffffffffffffffffffffffffff16826040516105f2906112b8565b60006040518083038185875af1925050503d806000811461062f576040519150601f19603f3d011682016040523d82523d6000602084013e610634565b606091505b5050905080610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f906114a4565b60405180910390fd5b505b505b7f6035a74b9d6470434d4444275b17bed95c57a0b0cb4aed1c3e82f73976a24111338783886040516106b19493929190611348565b60405180910390a150505050505050565b6106ca610b0d565b73ffffffffffffffffffffffffffffffffffffffff166106e8610770565b73ffffffffffffffffffffffffffffffffffffffff161461073e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610735906114c4565b60405180910390fd5b6107486000610b15565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107ed610b0d565b73ffffffffffffffffffffffffffffffffffffffff1661080b610770565b73ffffffffffffffffffffffffffffffffffffffff1614610861576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610858906114c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c890611444565b60405180910390fd5b6108da81610b15565b50565b610960846323b872dd60e01b8585856040516024016108fe93929190611311565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bd9565b50505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b81526004016109a49291906112e8565b60206040518083038186803b1580156109bc57600080fd5b505afa1580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190610f54565b6109fe91906115df565b9050610a818463095ea7b360e01b8584604051602401610a1f92919061138d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bd9565b50505050565b610b088363a9059cbb60e01b8484604051602401610aa692919061138d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bd9565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610c3b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ca09092919063ffffffff16565b9050600081511115610c9b5780806020019051810190610c5b9190610f2b565b610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190611504565b60405180910390fd5b5b505050565b6060610caf8484600085610cb8565b90509392505050565b606082471015610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf490611464565b60405180910390fd5b610d0685610dcc565b610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c906114e4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d6e91906112a1565b60006040518083038185875af1925050503d8060008114610dab576040519150601f19603f3d011682016040523d82523d6000602084013e610db0565b606091505b5091509150610dc0828286610ddf565b92505050949350505050565b600080823b905060008111915050919050565b60608315610def57829050610e3f565b600083511115610e025782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e369190611422565b60405180910390fd5b9392505050565b6000610e59610e548461156b565b611546565b905082815260208101848484011115610e7157600080fd5b610e7c848285611741565b509392505050565b600081359050610e93816119dd565b92915050565b600081519050610ea8816119f4565b92915050565b600082601f830112610ebf57600080fd5b8135610ecf848260208601610e46565b91505092915050565b600081359050610ee781611a0b565b92915050565b600081519050610efc81611a0b565b92915050565b600060208284031215610f1457600080fd5b6000610f2284828501610e84565b91505092915050565b600060208284031215610f3d57600080fd5b6000610f4b84828501610e99565b91505092915050565b600060208284031215610f6657600080fd5b6000610f7484828501610eed565b91505092915050565b60008060008060808587031215610f9357600080fd5b6000610fa187828801610ed8565b9450506020610fb287828801610e84565b9350506040610fc387828801610ed8565b925050606085013567ffffffffffffffff811115610fe057600080fd5b610fec87828801610eae565b91505092959194509250565b61100181611669565b82525050565b61101081611669565b82525050565b60006110218261159c565b61102b81856115b2565b935061103b818560208601611750565b61104481611812565b840191505092915050565b600061105a8261159c565b61106481856115c3565b9350611074818560208601611750565b80840191505092915050565b611089816116b1565b82525050565b611098816116d5565b82525050565b6110a7816116f9565b82525050565b6110b68161171d565b82525050565b60006110c7826115a7565b6110d181856115ce565b93506110e1818560208601611750565b6110ea81611812565b840191505092915050565b60006111026026836115ce565b915061110d82611823565b604082019050919050565b60006111256026836115ce565b915061113082611872565b604082019050919050565b60006111486021836115ce565b9150611153826118c1565b604082019050919050565b600061116b601b836115ce565b915061117682611910565b602082019050919050565b600061118e6020836115ce565b915061119982611939565b602082019050919050565b60006111b16000836115c3565b91506111bc82611962565b600082019050919050565b60006111d4601d836115ce565b91506111df82611965565b602082019050919050565b60006111f7602a836115ce565b91506112028261198e565b604082019050919050565b600060a083016000830151848203600086015261122a8282611016565b915050602083015161123f6020860182610ff8565b5060408301516112526040860182611283565b5060608301516112656060860182611283565b5060808301516112786080860182611283565b508091505092915050565b61128c816116a7565b82525050565b61129b816116a7565b82525050565b60006112ad828461104f565b915081905092915050565b60006112c3826111a4565b9150819050919050565b60006020820190506112e26000830184611007565b92915050565b60006040820190506112fd6000830185611007565b61130a6020830184611007565b9392505050565b60006060820190506113266000830186611007565b6113336020830185611007565b6113406040830184611292565b949350505050565b600060808201905061135d6000830187611007565b61136a6020830186611007565b6113776040830185611292565b6113846060830184611292565b95945050505050565b60006040820190506113a26000830185611007565b6113af6020830184611292565b9392505050565b60006020820190506113cb6000830184611080565b92915050565b60006020820190506113e6600083018461108f565b92915050565b6000602082019050611401600083018461109e565b92915050565b600060208201905061141c60008301846110ad565b92915050565b6000602082019050818103600083015261143c81846110bc565b905092915050565b6000602082019050818103600083015261145d816110f5565b9050919050565b6000602082019050818103600083015261147d81611118565b9050919050565b6000602082019050818103600083015261149d8161113b565b9050919050565b600060208201905081810360008301526114bd8161115e565b9050919050565b600060208201905081810360008301526114dd81611181565b9050919050565b600060208201905081810360008301526114fd816111c7565b9050919050565b6000602082019050818103600083015261151d816111ea565b9050919050565b6000602082019050818103600083015261153e818461120d565b905092915050565b6000611550611561565b905061155c8282611783565b919050565b6000604051905090565b600067ffffffffffffffff821115611586576115856117e3565b5b61158f82611812565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006115ea826116a7565b91506115f5836116a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162a576116296117b4565b5b828201905092915050565b6000611640826116a7565b915061164b836116a7565b92508282101561165e5761165d6117b4565b5b828203905092915050565b600061167482611687565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116bc826116c3565b9050919050565b60006116ce82611687565b9050919050565b60006116e0826116e7565b9050919050565b60006116f282611687565b9050919050565b60006117048261170b565b9050919050565b600061171682611687565b9050919050565b60006117288261172f565b9050919050565b600061173a82611687565b9050919050565b82818337600083830152505050565b60005b8381101561176e578082015181840152602081019050611753565b8381111561177d576000848401525b50505050565b61178c82611812565b810181811067ffffffffffffffff821117156117ab576117aa6117e3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f455448206f6e6c79206163636570746564206966207a617070696e672045544860008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f526566756e64206f662065786365737320455448206661696c65640000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6119e681611669565b81146119f157600080fd5b50565b6119fd8161167b565b8114611a0857600080fd5b50565b611a14816116a7565b8114611a1f57600080fd5b5056fea2646970667358221220161387963a43ecaba729046044423c704c4586a635f72732408a77c74eb9258464736f6c63430008040033";

export class Zap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _openingCeremonyContract: string,
    _stablecToken: string,
    _uniswapRouter: string,
    _quoter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Zap> {
    return super.deploy(
      _openingCeremonyContract,
      _stablecToken,
      _uniswapRouter,
      _quoter,
      overrides || {}
    ) as Promise<Zap>;
  }
  getDeployTransaction(
    _openingCeremonyContract: string,
    _stablecToken: string,
    _uniswapRouter: string,
    _quoter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _openingCeremonyContract,
      _stablecToken,
      _uniswapRouter,
      _quoter,
      overrides || {}
    );
  }
  attach(address: string): Zap {
    return super.attach(address) as Zap;
  }
  connect(signer: Signer): Zap__factory {
    return super.connect(signer) as Zap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZapInterface {
    return new utils.Interface(_abi) as ZapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Zap {
    return new Contract(address, _abi, signerOrProvider) as Zap;
  }
}
