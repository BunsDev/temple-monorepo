/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AMMWhitelist, AMMWhitelistInterface } from "../AMMWhitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TempleFraxAMMRouter",
        name: "_ammRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERIFY_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ammRouter",
    outputs: [
      {
        internalType: "contract TempleFraxAMMRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "quester",
        type: "address",
      },
    ],
    name: "digestFor",
    outputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527fd0cd60f28fe7c4de34ba2a0093737ff66c33a1b002412e3c6392eb40853c2272610140908152503480156200003a57600080fd5b5060405162001b3738038062001b37833981810160405281019062000060919062000361565b6040518060400160405280600c81526020017f414d4d57686974656c69737400000000000000000000000000000000000000008152506040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260e081815250508161010081815250504660a08181525050620001358184846200022b60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508061012081815250505050505050620001a1620001956200026760201b60201c565b6200026f60201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620004c2565b6000838383463060405160200162000248959493929190620003d5565b6040516020818303038152906040528051906020012090509392505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905062000344816200048e565b92915050565b6000815190506200035b81620004a8565b92915050565b600080604083850312156200037557600080fd5b600062000385858286016200034a565b9250506020620003988582860162000333565b9150509250929050565b620003ad8162000432565b82525050565b620003be8162000446565b82525050565b620003cf8162000484565b82525050565b600060a082019050620003ec6000830188620003b3565b620003fb6020830187620003b3565b6200040a6040830186620003b3565b620004196060830185620003c4565b620004286080830184620003a2565b9695505050505050565b60006200043f8262000464565b9050919050565b6000819050919050565b60006200045d8262000432565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620004998162000432565b8114620004a557600080fd5b50565b620004b38162000450565b8114620004bf57600080fd5b50565b60805160a05160c05160601c60e0516101005161012051610140516116096200052e600039600081816102070152818161048901526104af0152600061080401526000610846015260006108250152600061075a015260006107b0015260006107d901526116096000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637ecebe00116100715780637ecebe00146101405780638da5cb5b1461017057806390b3c4e71461018e578063cb6535b5146101ac578063e2454522146101ca578063f2fde38b146101e6576100a9565b8063057d6968146100ae5780632b7ac3f3146100de5780633644e515146100fc5780635437988d1461011a578063715018a614610136575b600080fd5b6100c860048036038101906100c39190610ef3565b610202565b6040516100d59190611137565b60405180910390f35b6100e661026b565b6040516100f3919061111c565b60405180910390f35b610104610291565b6040516101119190611137565b60405180910390f35b610134600480360381019061012f9190610ef3565b6102a0565b005b61013e610360565b005b61015a60048036038101906101559190610ef3565b6103e8565b604051610167919061131c565b60405180910390f35b610178610438565b604051610185919061111c565b60405180910390f35b610196610461565b6040516101a39190611221565b60405180910390f35b6101b4610487565b6040516101c19190611137565b60405180910390f35b6101e460048036038101906101df9190610f1c565b6104ab565b005b61020060048036038101906101fb9190610ef3565b610644565b005b6000807f000000000000000000000000000000000000000000000000000000000000000083610230856103e8565b60405160200161024293929190611152565b6040516020818303038152906040528051906020012090506102638161073c565b915050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061029b610756565b905090565b6102a8610870565b73ffffffffffffffffffffffffffffffffffffffff166102c6610438565b73ffffffffffffffffffffffffffffffffffffffff161461031c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610313906112fc565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610368610870565b73ffffffffffffffffffffffffffffffffffffffff16610386610438565b73ffffffffffffffffffffffffffffffffffffffff16146103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d3906112fc565b60405180910390fd5b6103e66000610878565b565b6000610431600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061093c565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000336104d83361094a565b6040516020016104ea93929190611152565b604051602081830303815290604052805190602001209050600061050d8261073c565b9050600061051d828787876109a8565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a69061125c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321b384ed336040518263ffffffff1660e01b815260040161060a919061111c565b600060405180830381600087803b15801561062457600080fd5b505af1158015610638573d6000803e3d6000fd5b50505050505050505050565b61064c610870565b73ffffffffffffffffffffffffffffffffffffffff1661066a610438565b73ffffffffffffffffffffffffffffffffffffffff16146106c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b7906112fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610730576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107279061129c565b60405180910390fd5b61073981610878565b50565b600061074f610749610756565b836109d3565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156107d257507f000000000000000000000000000000000000000000000000000000000000000046145b156107ff577f0000000000000000000000000000000000000000000000000000000000000000905061086d565b61086a7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a06565b90505b90565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109978161093c565b91506109a281610a40565b50919050565b60008060006109b987878787610a56565b915091506109c681610b63565b8192505050949350505050565b600082826040516020016109e89291906110e5565b60405160208183030381529060405280519060200120905092915050565b60008383834630604051602001610a21959493929190611189565b6040516020818303038152906040528051906020012090509392505050565b6001816000016000828254019250508190555050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610a91576000600391509150610b5a565b601b8560ff1614158015610aa95750601c8560ff1614155b15610abb576000600491509150610b5a565b600060018787878760405160008152602001604052604051610ae094939291906111dc565b6020604051602081039080840390855afa158015610b02573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b5157600060019250925050610b5a565b80600092509250505b94509492505050565b60006004811115610b9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610bd6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610be157610eb1565b60016004811115610c1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610c54577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c9061123c565b60405180910390fd5b60026004811115610ccf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610d08577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610d49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d409061127c565b60405180910390fd5b60036004811115610d83577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610dbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df4906112bc565b60405180910390fd5b600480811115610e36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115610e6f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea7906112dc565b60405180910390fd5b5b50565b600081359050610ec38161158e565b92915050565b600081359050610ed8816115a5565b92915050565b600081359050610eed816115bc565b92915050565b600060208284031215610f0557600080fd5b6000610f1384828501610eb4565b91505092915050565b600080600060608486031215610f3157600080fd5b6000610f3f86828701610ede565b9350506020610f5086828701610ec9565b9250506040610f6186828701610ec9565b9150509250925092565b610f7481611353565b82525050565b610f8381611365565b82525050565b610f9a610f9582611365565b6113ca565b82525050565b610fa9816113a6565b82525050565b6000610fbc601883611337565b9150610fc7826113d4565b602082019050919050565b6000610fdf601183611337565b9150610fea826113fd565b602082019050919050565b6000611002601f83611337565b915061100d82611426565b602082019050919050565b6000611025602683611337565b91506110308261144f565b604082019050919050565b6000611048600283611348565b91506110538261149e565b600282019050919050565b600061106b602283611337565b9150611076826114c7565b604082019050919050565b600061108e602283611337565b915061109982611516565b604082019050919050565b60006110b1602083611337565b91506110bc82611565565b602082019050919050565b6110d08161138f565b82525050565b6110df81611399565b82525050565b60006110f08261103b565b91506110fc8285610f89565b60208201915061110c8284610f89565b6020820191508190509392505050565b60006020820190506111316000830184610f6b565b92915050565b600060208201905061114c6000830184610f7a565b92915050565b60006060820190506111676000830186610f7a565b6111746020830185610f6b565b61118160408301846110c7565b949350505050565b600060a08201905061119e6000830188610f7a565b6111ab6020830187610f7a565b6111b86040830186610f7a565b6111c560608301856110c7565b6111d26080830184610f6b565b9695505050505050565b60006080820190506111f16000830187610f7a565b6111fe60208301866110d6565b61120b6040830185610f7a565b6112186060830184610f7a565b95945050505050565b60006020820190506112366000830184610fa0565b92915050565b6000602082019050818103600083015261125581610faf565b9050919050565b6000602082019050818103600083015261127581610fd2565b9050919050565b6000602082019050818103600083015261129581610ff5565b9050919050565b600060208201905081810360008301526112b581611018565b9050919050565b600060208201905081810360008301526112d58161105e565b9050919050565b600060208201905081810360008301526112f581611081565b9050919050565b60006020820190508181036000830152611315816110a4565b9050919050565b600060208201905061133160008301846110c7565b92915050565b600082825260208201905092915050565b600081905092915050565b600061135e8261136f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006113b1826113b8565b9050919050565b60006113c38261136f565b9050919050565b6000819050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61159781611353565b81146115a257600080fd5b50565b6115ae81611365565b81146115b957600080fd5b50565b6115c581611399565b81146115d057600080fd5b5056fea26469706673582212200f2f8dec22c7fb3b1f4bb2ac566a37bddbee156851bf12963f6bc95592c3f9d764736f6c63430008040033";

export class AMMWhitelist__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ammRouter: string,
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AMMWhitelist> {
    return super.deploy(
      _ammRouter,
      _verifier,
      overrides || {}
    ) as Promise<AMMWhitelist>;
  }
  getDeployTransaction(
    _ammRouter: string,
    _verifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ammRouter, _verifier, overrides || {});
  }
  attach(address: string): AMMWhitelist {
    return super.attach(address) as AMMWhitelist;
  }
  connect(signer: Signer): AMMWhitelist__factory {
    return super.connect(signer) as AMMWhitelist__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMWhitelistInterface {
    return new utils.Interface(_abi) as AMMWhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AMMWhitelist {
    return new Contract(address, _abi, signerOrProvider) as AMMWhitelist;
  }
}
