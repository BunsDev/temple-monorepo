import '@nomiclabs/hardhat-ethers';
import { task } from "hardhat/config";
import { BigNumber, ContractTransaction } from 'ethers';
import { readFileSync } from 'fs';
import { ExitQueue__factory } from '../typechain';

async function mine(tx: Promise<ContractTransaction>) {
  await (await tx).wait()
}

// sets temple owed by users. from csv file generated by ethpanda
// temple values should be 18 decimals
task("set-owed-temple", "Sets temple owed by users")
  .addParam("path", "path of csv file containing users owing")
  .addParam("exitqueue", "exist queue address")
  .setAction( async (args, hre) => {
    const [owner] = await hre.ethers.getSigners();
    const fileContent = readFileSync(args.path, 'utf8');
    const lines = fileContent.split("\n");
    const addresses = [];
    const amountsOwed = [];
    for (let i=0; i<lines.length; i++) {
      if (i == 0) continue; // skip header
      const [userAddress, _b, _c, _d, _e, templeOwed] = lines[i].split(",");
      if (userAddress) {
        addresses.push(userAddress);
        amountsOwed.push(BigNumber.from(templeOwed));
      }
    }
    const EXIT_QUEUE = new ExitQueue__factory(owner).attach(args.exitqueue);
    await mine(EXIT_QUEUE.setOwedTemple(addresses, amountsOwed));
  });